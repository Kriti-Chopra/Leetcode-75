class Solution {
    public String decodeString(String s) {
        Stack<Integer> countStack = new Stack<Integer>();
        Stack<StringBuilder> stringStack = new Stack<StringBuilder>();
        int count=0;
        StringBuilder currentString =new StringBuilder(); 

        for(char i:s.toCharArray()){
            //create the number for multidigits
            if(Character.isDigit(i)){
                count = count*10 + (i-'0');
            }
            //when '[' is encountered, push the existing string onto stack
            else if(i=='['){
                countStack.push(count);
                count=0;
                stringStack.push(currentString);
                currentString = new StringBuilder();
            }
            //when ']' is encountered, repeat current string by taking the count stack top
            else if(i==']'){
                int repeatCount= countStack.pop();
                String formedString = currentString.toString();
                while(repeatCount-1>0){
                    currentString.append(formedString);
                    --repeatCount;
                }
                currentString = stringStack.peek().append(currentString);
                stringStack.pop();
            }
            //keep building the string
            else {
                currentString.append(i);
            }
        }

        return currentString.toString();
    }
}
